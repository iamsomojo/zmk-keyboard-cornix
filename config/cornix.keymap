/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"
#include "includes/cornix54.h"

// tap windows for ctl alt and gui

#define HM_TAPPING_TERM 250
#define HM_TAPPING_REPEAT 210

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH1 LH0 RH0 RH1
#define KEYS_T LH1 LH0 RH0 RH1
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    // Activate ADJUST layer by pressing raise and lower

    behaviors {
        hr: homerow {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <130>;
            require-prior-idle-ms = <130>;
            hold-trigger-on-release;
        };

        hr_shft: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <180>;
            quick-tap-ms = <130>;
        };

        sb_lt: sb_lt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <130>;
            flavor = "balanced";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        mv_media {
            if-layers = <6 4>;
            then-layer = <8>;
        };

        mv_mouse {
            if-layers = <6 3>;
            then-layer = <7>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cb_caps {
            bindings = <&kp CLCK>;
            key-positions = <3 4>;
            require-prior-idle-ms = <130>;
        };

        cb_tab {
            bindings = <&kp TAB>;
            key-positions = <3 2>;
            require-prior-idle-ms = <130>;
        };

        cb_lgui {
            bindings = <&kp LGUI>;
            key-positions = <27 26>;
            require-prior-idle-ms = <130>;
        };

        cb_rgui {
            bindings = <&kp RGUI>;
            key-positions = <34 35>;
            require-prior-idle-ms = <130>;
        };

        cb_quote {
            bindings = <&kp SQT>;
            key-positions = <21 22>;
            layers = <0 2>;
        };

        cb_ralt_lc {
            bindings = <&kp RALT>;
            key-positions = <8 9>;
            require-prior-idle-ms = <130>;
            timeout-ms = <40>;
        };

        cb_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
            require-prior-idle-ms = <130>;
            layers = <2>;
        };

        cb_lalt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <14 15>;
            require-prior-idle-ms = <130>;
            timeout-ms = <40>;
        };

        cb_lctrl {
            bindings = <&kp LCTRL>;
            key-positions = <15 16>;
            require-prior-idle-ms = <130>;
            timeout-ms = <40>;
        };

        cb_lctrl_lalt {
            bindings = <&kp LC(LALT)>;
            key-positions = <14 15 16>;
            require-prior-idle-ms = <130>;
        };

        cb_ralt {
            bindings = <&kp LALT>;
            key-positions = <20 21>;
            require-prior-idle-ms = <130>;
            timeout-ms = <40>;
        };

        cb_rctrl {
            bindings = <&kp LCTRL>;
            key-positions = <19 20>;
            require-prior-idle-ms = <130>;
            timeout-ms = <40>;
        };

        cb_rctrl_ralt {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <19 20 21>;
            require-prior-idle-ms = <130>;
        };

        cb_mo_media {
            bindings = <&mo 8>;
            key-positions = <42 44>;
            require-prior-idle-ms = <130>;
        };

        cb_move_layer_mouse {
            bindings = <&mo 7>;
            key-positions = <42 45>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Totem {
            display-name = "Base";
            bindings = <
&none      &kp Q  &kp W  &kp E             &kp R           &kp T                            &kp Y        &kp U            &kp I         &kp O    &kp P          &none
&none      &kp A  &kp S  &kp D             &kp F           &kp G                            &kp H        &kp J            &kp K         &kp L    &kp SEMICOLON  &none
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V           &kp B         &kp C_MUTE  &none  &kp N        &kp M            &kp COMMA     &kp DOT  &kp FSLH       &kp RSHFT
&none      &none  &none  &mt LCTRL ESCAPE  &sb_lt 6 SPACE  &mt LALT TAB                     &lt 4 ENTER  &lt 3 BACKSPACE  &lt 5 DELETE  &tog 1   &tog 2         &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        Totem_HR {
            display-name = "BaseHR";
            bindings = <
&none      &kp Q           &kp W           &kp E             &kp R             &kp T                               &kp Y        &kp U             &kp I         &kp O       &kp P          &none
&none      &hr LEFT_GUI A  &hr LEFT_ALT S  &hr LCTRL D       &hr_shft LSHFT F  &kp G                               &kp H        &hr_shft RSHFT J  &hr LCTRL K   &hr LALT L  &hr RGUI SEMI  &none
&kp LSHFT  &kp Z           &kp X           &kp C             &kp V             &kp B         &mkp LCLK  &mkp RCLK  &kp N        &kp M             &kp COMMA     &kp DOT     &kp FSLH       &kp RSHFT
&none      &none           &none           &mt LCTRL ESCAPE  &sb_lt 6 SPACE    &mt LALT TAB                        &lt 4 ENTER  &lt 3 BACKSPACE   &lt 5 DELETE  &trans      &none          &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        Corne {
            display-name = "Base42";
            bindings = <
&kp DEL    &kp Q   &kp W   &kp E             &kp R           &kp T                            &kp Y           &kp U   &kp I        &kp O    &kp P     &kp BACKSPACE
&kp LGUI   &trans  &trans  &trans            &trans          &kp G                            &kp H           &trans  &trans       &trans   &trans    &kp ENTER
&kp LSHFT  &kp Z   &kp X   &kp C             &kp V           &kp B         &kp C_MUTE  &none  &kp N           &kp M   &kp COMMA    &kp DOT  &kp FSLH  &kp RSHFT
&none      &none   &none   &mt LCTRL ESCAPE  &sb_lt 6 SPACE  &kp LEFT_ALT                     &lt 4 LEFT_ALT  &mo 3   &lt 5 LCTRL  &none    &trans    &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        Number {
            display-name = "Num";
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp MINUS  &kp N4  &kp N5   &kp N6  &kp EQUAL                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans  &kp DOT  &kp N0  &none                      &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Symbol {
            display-name = "Sym";
            bindings = <
&trans  &kp LS(LBKT)   &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(RBKT)                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(MINUS)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(EQUAL)                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(BSLH)   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans      &kp LS(N9)  &kp LS(N0)  &kp DOT                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Function {
            display-name = "Func";
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans                           &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Navigation {
            display-name = "Nav";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &kp PAGE_UP    &kp HOME   &kp UP     &kp END    &kp INSERT  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &kp PAGE_DOWN  &kp LEFT   &kp DOWN   &kp RIGHT  &kp LC(A)   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LC(LS(Z))  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans         &trans     &trans     &trans     &trans      &trans
            >;
        };

        Mouse {
            display-name = "Mouse";
            bindings = <
&none  &none      &none      &none      &none      &none                        &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &none  &none
&none  &mkp MB4   &mkp MB5   &mkp LCLK  &mkp RCLK  &none                        &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &none
&none  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(LS(Z))  &none  &none  &none           &none           &none           &none            &none  &none
&none  &none      &none      &none      &none      &none                        &none           &none           &none           &none            &none  &none
            >;
        };

        Media {
            display-name = "Media";
            bindings = <
&none  &none  &none  &none  &none  &none                &bt BT_CLR_ALL  &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none
&none  &none  &none  &none  &none  &none                &none           &kp C_AC_BACK     &kp C_VOL_DN  &kp C_VOL_UP  &kp C_FF      &none
&none  &none  &none  &none  &none  &none  &none  &none  &none           &kp C_PLAY_PAUSE  &kp C_MUTE    &kp C_STOP    &none         &none
&none  &none  &none  &none  &none  &none                &none           &none             &none         &none         &none         &none
            >;
        };
    };
};
